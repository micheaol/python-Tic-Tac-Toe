[
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "HTTPException",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Body",
        "importPath": "fastapi.params",
        "description": "fastapi.params",
        "isExtraImport": true,
        "detail": "fastapi.params",
        "documentation": {}
    },
    {
        "label": "BaseModel",
        "importPath": "pydantic",
        "description": "pydantic",
        "isExtraImport": true,
        "detail": "pydantic",
        "documentation": {}
    },
    {
        "label": "randrange",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "Post",
        "kind": 6,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "class Post(BaseModel):\n    title: str\n    content: str\n    rating: Optional[int] = None\nmy_post = [\n    {\n        \"id\": 1,\n        \"title\": \"Post 1\",\n        \"content\": \"Content of post 1\",\n    },",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "find_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def find_post(id):\n    for post in my_post:\n        if post[\"id\"] == int(id):\n            return post\n@app.get(\"/\")\ndef root():\n    return {\"message\": \"Welcome to my python api\"}\n@app.get(\"/posts\")\ndef get_post():\n    return { \"data\": my_post}",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "root",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def root():\n    return {\"message\": \"Welcome to my python api\"}\n@app.get(\"/posts\")\ndef get_post():\n    return { \"data\": my_post}\n@app.get(\"/posts/latest\")\ndef get_latest_post():\n    post = my_post[len(my_post) - 1]\n    return {\"data\": post}\n@app.get(\"/posts/{id}\")",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_post():\n    return { \"data\": my_post}\n@app.get(\"/posts/latest\")\ndef get_latest_post():\n    post = my_post[len(my_post) - 1]\n    return {\"data\": post}\n@app.get(\"/posts/{id}\")\ndef get_post(id: int, response: Response):\n    post = find_post(id)\n    if not post:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_latest_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_latest_post():\n    post = my_post[len(my_post) - 1]\n    return {\"data\": post}\n@app.get(\"/posts/{id}\")\ndef get_post(id: int, response: Response):\n    post = find_post(id)\n    if not post:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"post with id: {id} does not exist\")\n        # response.status_code = status.HTTP_404_NOT_FOUND\n        # return {\"message\": f\"post id: {id} does not exist\"}",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_post(id: int, response: Response):\n    post = find_post(id)\n    if not post:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail=f\"post with id: {id} does not exist\")\n        # response.status_code = status.HTTP_404_NOT_FOUND\n        # return {\"message\": f\"post id: {id} does not exist\"}\n    return {\"data\": post}\n@app.post(\"/posts\", status_code=status.HTTP_201_CREATED)\ndef create_post(post: Post):\n    dict_post = post.dict()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "create_post",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def create_post(post: Post):\n    dict_post = post.dict()\n    dict_post[\"id\"] = randrange(0, 100)\n    my_post.append(dict_post)\n    return {\"data\": dict_post}",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\nclass Post(BaseModel):\n    title: str\n    content: str\n    rating: Optional[int] = None\nmy_post = [\n    {\n        \"id\": 1,\n        \"title\": \"Post 1\",\n        \"content\": \"Content of post 1\",",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "my_post",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "my_post = [\n    {\n        \"id\": 1,\n        \"title\": \"Post 1\",\n        \"content\": \"Content of post 1\",\n    },\n    {\n        \"id\": 2,\n        \"title\": \"Post 2\",\n        \"content\": \"Content of post 2\",",
        "detail": "main",
        "documentation": {}
    }
]